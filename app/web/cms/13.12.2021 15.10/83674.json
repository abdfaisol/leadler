{"content":{"type":"API","structure":"","server_on_load":"async ({\n  template,\n  params,\n  render,\n  db,\n  req,\n  reply,\n  user,\n  log,\n  ext,\n  isDev,\n}: Server) => {\n  const privateKey = \"Team 6 Andromedia\";\n  if (user.id) {\n    let token_private = ext.CryptoJS.SHA3(privateKey, {\n      outputLength: 512,\n    }).toString();\n    let a_data = ext.CryptoJS.AES.decrypt(user.id, token_private).toString(\n      ext.CryptoJS.enc.Utf8\n    );\n    let data = JSON.parse(a_data);\n    if (data) {\n      db.muser\n        .findUnique({\n          where: {\n            id: parseInt(data.id),\n          },\n          select: {\n            email: true,\n            muser_role: {\n              select: {\n                name: true,\n              },\n            },\n          },\n        })\n        .then((e) => {\n          if (e.muser_role.name.toLowerCase() == \"admin\") {\n            db.mproject\n              .findUnique({\n                where: {\n                  id: parseInt(params.id),\n                },\n              })\n              .then((e1) => {\n                // reply.send({\n                //   status: true,\n                //   pesanindo: \"testing\",\n                //   msg: e1,\n                // });\n                db.mproject_detail\n                  .findMany({\n                    where: {\n                      AND: [\n                        {\n                          idproject: parseInt(params.id),\n                        },\n                        {\n                          idparent: null,\n                        },\n                      ],\n                    },\n                    include: {\n                      mproject_status: true,\n                      // mproject_upload: true,\n                      mproject_task_user: {\n                        include: {\n                          muser_has_mproject: {\n                            include: {\n                              muser: true,\n                            },\n                          },\n                        },\n                      },\n                    },\n                  })\n                  .then((e2) => {\n                    // reply.send({\n                    //   status: false,\n                    //   msg: \"testing\",\n                    // });\n                    const query = db.$queryRaw(\n                      \"select d.id, d.name from muser_has_mproject a, muser b, muser_detail c, mdivision d where a.idproject = \" +\n                        parseInt(params.id) +\n                        \" and a.iduser = b.id and b.id = c.iduser and c.iddivision = d.id group by d.id\"\n                    );\n                    query\n                      .then((e3) => {\n                        let data_project = {\n                          e1,\n                          e2,\n                          e3,\n                        };\n                        // e3.map((item) => {\n                        //   e3.push({ isinya: idx.all });\n                        //   e3.push({ indexnya: idx });\n                        // });\n                        reply.send({\n                          status: true,\n                          data_act: {\n                            project: data_project.e1,\n                            project_task: data_project.e2,\n                            project_division: data_project.e3,\n                          },\n                        });\n                      })\n                      .catch((e3) => {\n                        reply.send({\n                          status: false,\n                          msg: e3,\n                        });\n                      });\n                  })\n                  .catch((e2) => {\n                    reply.send({\n                      status: false,\n                      msg: e2,\n                    });\n                  });\n              })\n              .catch((e) => {\n                reply.send({\n                  status: false,\n                  msg: e,\n                });\n              });\n          }\n          if (e.muser_role.name.toLowerCase() == \"directors\") {\n            db.mproject\n              .findUnique({\n                where: {\n                  id: parseInt(params.id),\n                },\n              })\n              .then((e1) => {\n                if (\n                  parseInt(data.muser_detail.iddepartment) == e1.iddepartment\n                ) {\n                  db.mproject_detail\n                    .findMany({\n                      where: {\n                        AND: [\n                          {\n                            idproject: parseInt(params.id),\n                          },\n                          {\n                            idparent: null,\n                          },\n                        ],\n                      },\n                      include: {\n                        mproject_status: true,\n                        // mproject_upload: true,\n                        mproject_task_user: {\n                          include: {\n                            muser_has_mproject: {\n                              include: {\n                                muser: true,\n                              },\n                            },\n                          },\n                        },\n                      },\n                    })\n                    .then((e2) => {\n                      reply.send({\n                        status: true,\n                        data_act: {\n                          e1,\n                          e2,\n                        },\n                      });\n                    })\n                    .catch((e2) => {\n                      reply.send({\n                        status: false,\n                        msg: e2,\n                      });\n                    });\n                } else {\n                  reply.send({\n                    status: false,\n                    msg:\n                      \"you dont have access with this project, your department with this project is different\",\n                  });\n                }\n                // reply.send({\n                //   status: true,\n                //   pesanindo: \"testing\",\n                //   msg: e1,\n                // });\n                db.mproject_detail\n                  .findMany({\n                    where: {\n                      AND: [\n                        {\n                          idproject: parseInt(params.id),\n                        },\n                        {\n                          idparent: null,\n                        },\n                      ],\n                    },\n                    include: {\n                      mproject_status: true,\n                      // mproject_upload: true,\n                      mproject_task_user: {\n                        include: {\n                          muser_has_mproject: {\n                            include: {\n                              muser: true,\n                            },\n                          },\n                        },\n                      },\n                    },\n                  })\n                  .then((e2) => {\n                    reply.send({\n                      status: true,\n                      data_act: {\n                        e1,\n                        e2,\n                      },\n                    });\n                  })\n                  .catch((e2) => {\n                    reply.send({\n                      status: false,\n                      msg: e2,\n                    });\n                  });\n              })\n              .catch((e) => {\n                reply.send({\n                  status: false,\n                  msg: e,\n                });\n              });\n          }\n          if (\n            e.muser_role.name.toLowerCase() == \"user\" ||\n            e.muser_role.name.toLowerCase() == \"project manager\"\n          ) {\n            db.muser_has_mproject\n              .findFirst({\n                where: {\n                  AND: [\n                    { iduser: parseInt(data.id) },\n                    { idproject: parseInt(params.id) },\n                  ],\n                },\n              })\n              .then((e0) => {\n                if (e0.idproject) {\n                  if (e0.idproject == parseInt(params.id)) {\n                    db.mproject\n                      .findUnique({\n                        where: {\n                          id: parseInt(params.id),\n                        },\n                      })\n                      .then((e1) => {\n                        // reply.send({\n                        //   status: true,\n                        //   pesanindo: \"testing\",\n                        //   msg: e1,\n                        // });\n                        db.mproject_detail\n                          .findMany({\n                            where: {\n                              AND: [\n                                {\n                                  idproject: parseInt(params.id),\n                                },\n                                {\n                                  idparent: null,\n                                },\n                              ],\n                            },\n                            include: {\n                              mproject_status: true,\n                              // mproject_upload: true,\n                              mpriority: true,\n                              mproject_task_user: {\n                                include: {\n                                  muser_has_mproject: {\n                                    include: {\n                                      muser: true,\n                                    },\n                                  },\n                                },\n                              },\n                            },\n                          })\n                          .then((e2) => {\n                            db.$queryRaw(\n                              \"select count(id) as n_complete from mproject_detail where idproject = \" +\n                                parseInt(params.id) +\n                                \" and idstatus = 1\"\n                            ).then((e4) => {\n                              let nComplete = 0;\n                              e4.map((idx) => {\n                                nComplete = idx.n_complete;\n                              });\n                              db.$queryRaw(\n                                \"select count(id) as n_task from mproject_detail where idproject = \" +\n                                  parseInt(params.id)\n                              ).then((e5) => {\n                                let nTotalTask = 0;\n                                e5.map((idx) => {\n                                  nTotalTask = idx.n_task;\n                                });\n                                const query = db.$queryRaw(\n                                  \"select d.id, d.name from muser_has_mproject a, muser b, muser_detail c, mdivision d where a.idproject = \" +\n                                    parseInt(params.id) +\n                                    \" and a.iduser = b.id and b.id = c.iduser and c.iddivision = d.id group by d.id\"\n                                );\n                                query\n                                  .then((e3) => {\n                                    let data_project = {\n                                      e1,\n                                      e2,\n                                      e3,\n                                    };\n                                    let persentase =\n                                      (nComplete / nTotalTask) * 100;\n                                    if (!persentase) {\n                                      persentase = 0;\n                                    }\n                                    reply.send({\n                                      status: true,\n                                      msg: \"terbaru\",\n                                      data_act: {\n                                        project: data_project.e1,\n                                        project_task: data_project.e2,\n                                        project_division: data_project.e3,\n                                        resultTask: {\n                                          completed: Math.floor(persentase),\n                                          nTask: nTotalTask,\n                                          taskComplete: nComplete,\n                                        },\n                                      },\n                                    });\n                                  })\n                                  .catch((e3) => {\n                                    reply.send({\n                                      status: false,\n                                      msg: e3,\n                                    });\n                                  });\n                              });\n                            });\n                          })\n                          .catch((e2) => {\n                            reply.send({\n                              status: false,\n                              msg: e2,\n                            });\n                          });\n                      })\n                      .catch((e) => {\n                        reply.send({\n                          status: false,\n                          msg: e,\n                        });\n                      });\n                  } else {\n                    reply.send({\n                      status: false,\n                      msg: \"you dont have access with this project\",\n                    });\n                  }\n                } else {\n                  reply.send({\n                    status: false,\n                    msg: \"Error\",\n                  });\n                }\n              })\n              .catch((e) => {\n                reply.send({\n                  status: false,\n                  pesanindo: \"kamu tidak punya akses ke projek ini\",\n                  msg: e,\n                });\n              });\n          }\n          // Validasi Role\n        })\n        .catch((e) => {\n          reply.send({\n            status: false,\n            pesanindo: \"error nih atau id tidak diketahui\",\n            msg: e,\n          });\n        });\n    } else {\n      reply.send({\n        status: false,\n        msg: \"invalid session id\",\n      });\n    }\n  } else {\n    reply.send({\n      status: false,\n      msg: \"session not found\",\n    });\n  }\n}","figma":{}},"title":"project-show","type":"cms-template","lang":"","status":"SYSTEM","parent_id":"54643","slug":"/api/project/show/[id]","site":"*","id":"83674"}