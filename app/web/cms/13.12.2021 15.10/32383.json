{"content":{"type":"API","structure":"","server_on_load":"async ({\n  template,\n  params,\n  render,\n  db,\n  req,\n  reply,\n  user,\n  log,\n  ext,\n  isDev,\n}: Server) => {\n  const privateKey = \"Team 6 Andromedia\";\n  if (user.id) {\n    let token_private = ext.CryptoJS.SHA3(privateKey, {\n      outputLength: 512,\n    }).toString();\n    let a_data = ext.CryptoJS.AES.decrypt(user.id, token_private).toString(\n      ext.CryptoJS.enc.Utf8\n    );\n    let data = JSON.parse(a_data);\n    if (data) {\n      db.muser\n        .findUnique({\n          where: {\n            id: parseInt(data.id),\n          },\n          select: {\n            email: true,\n            muser_role: {\n              select: {\n                name: true,\n              },\n            },\n          },\n        })\n        .then((e) => {\n          // Validasi Role\n          if (e.muser_role.name.toLowerCase() == \"admin\") {\n            // Update null muser_detail\n            db.muser_detail\n              .updateMany({\n                where: {\n                  iddivision: req.body.data.iddivision,\n                },\n                data: {\n                  iddivision: null,\n                },\n              })\n              .then((e) => {\n                db.mdivision\n                  .delete({\n                    where: {\n                      id: req.body.data.iddivision,\n                    },\n                  })\n                  .then((e) => {\n                    reply.send({\n                      status: true,\n                      data_act: e,\n                    });\n                  })\n                  .catch((e) => {\n                    reply.send({\n                      status: false,\n                      msg: e,\n                    });\n                  });\n              })\n              .catch((e) => {\n                reply.send({\n                  status: false,\n                  msg: e,\n                });\n              });\n          } else {\n            reply.send({\n              status: false,\n              msg: \"you dont have access the featured\",\n            });\n          }\n        })\n        .catch((e) => {\n          reply.send({\n            status: false,\n            msg: e,\n          });\n        });\n    } else {\n      reply.send({\n        status: false,\n        msg: \"invalid session id\",\n      });\n    }\n  } else {\n    reply.send({\n      status: false,\n      msg: \"session not found\",\n    });\n  }\n}","figma":{}},"title":"division-delete","type":"cms-template","lang":"","status":"SYSTEM","parent_id":"54643","slug":"/api/division/delete","site":"*","id":"32383"}