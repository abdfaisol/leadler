{
  "title": "team-delete",
  "type": "cms-template",
  "lang": "",
  "status": "SYSTEM",
  "parent_id": "54643",
  "content": {
    "type": "API",
    "structure": "",
    "server_on_load": "async ({\n  template,\n  params,\n  render,\n  db,\n  req,\n  reply,\n  user,\n  log,\n  ext,\n  isDev,\n}: Server) => {\n  const privateKey = \"Team 6 Andromedia\";\n  if (user.user.id) {\n    let token_private = ext.CryptoJS.SHA3(privateKey, {\n      outputLength: 512,\n    }).toString();\n    let a_data = ext.CryptoJS.AES.decrypt(user.user.id, token_private).toString(\n      ext.CryptoJS.enc.Utf8\n    );\n    let data = JSON.parse(a_data);\n    if (data) {\n      db.muser\n        .findUnique({\n          where: {\n            id: parseInt(data.id),\n          },\n          select: {\n            email: true,\n            muser_detail: true,\n            muser_role: {\n              select: {\n                name: true,\n              },\n            },\n          },\n        })\n        .then((e) => {\n          // Validasi Role\n          if (e.muser_role.name.toLowerCase() == \"project manager\") {\n            // Update null muser_detail\n            db.muser_team\n              .findMany({\n                where: {\n                  AND: [\n                    {\n                      iduser: e.muser_detail.id,\n                    },\n                    { id: parseInt(req.body.idteam) },\n                  ],\n                },\n                select: {\n                  id: true,\n                },\n              })\n              .then((e1) => {\n                if (e1.length > 0) {\n                  db.muser_team_role\n                    .deleteMany({\n                      where: {\n                        idteam: parseInt(req.body.idteam),\n                      },\n                    })\n                    .then((e) => {\n                      db.muser_team\n                        .delete({\n                          where: {\n                            id: parseInt(req.body.idteam),\n                          },\n                        })\n                        .then((e) => {\n                          reply.send({\n                            status: true,\n                            data_act: 0,\n                          });\n                        })\n                        .catch((e) => {\n                          reply.send({\n                            status: false,\n                            msg: e,\n                          });\n                        });\n                    })\n                    .catch((e) => {\n                      reply.send({\n                        status: false,\n                        msg: e,\n                      });\n                    });\n                } else {\n                  reply.send({\n                    status: false,\n                    msg: \"you dont have access the team\",\n                    data: req.body,\n                    count: e1.length,\n                  });\n                }\n              })\n              .catch((e) => {\n                reply.send({\n                  status: false,\n                  msg: e,\n                });\n              });\n          } else {\n            reply.send({\n              status: false,\n              msg: \"you dont have access the featured\",\n            });\n          }\n        })\n        .catch((e) => {\n          reply.send({\n            status: false,\n            msg: e,\n          });\n        });\n    } else {\n      reply.send({\n        status: false,\n        msg: \"invalid session id\",\n      });\n    }\n  } else {\n    reply.send({\n      status: false,\n      msg: \"session not found\",\n    });\n  }\n}",
    "figma": {}
  },
  "slug": "/api/team/delete",
  "site": "*",
  "id": "38971"
}
