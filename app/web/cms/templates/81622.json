{"content":{"type":"API","structure":"","server_on_load":"async ({\n  template,\n  params,\n  render,\n  db,\n  req,\n  reply,\n  user,\n  log,\n  ext,\n  isDev,\n}: Server) => {\n  const privateKey = \"Team 6 Andromedia\";\n  if (user.id) {\n    let token_private = ext.CryptoJS.SHA3(privateKey, {\n      outputLength: 512,\n    }).toString();\n    let a_data = ext.CryptoJS.AES.decrypt(user.id, token_private).toString(\n      ext.CryptoJS.enc.Utf8\n    );\n    let data_split = a_data.split(\";\");\n    let data = {\n      id: data_split[0],\n      username: data_split[1],\n      email: data_split[2],\n    };\n    db.muser\n      .findUnique({\n        where: {\n          id: parseInt(data.id),\n        },\n        select: {\n          email: true,\n          muser_role: {\n            select: {\n              name: true,\n            },\n          },\n        },\n      })\n      .then((e) => {\n        if (\n          e.muser_role.name.toLowerCase() == \"admin\" ||\n          e.muser_role.name.toLowerCase() == \"project manager\"\n        ) {\n          try {\n            db.muser_role\n              .findMany({\n                select: {\n                  id: true,\n                  name: true,\n                },\n              })\n              .then((e) => {\n                reply.send({\n                  status: true,\n                  data_act: e,\n                });\n              });\n          } catch (exception_var) {\n            reply.send({\n              status: false,\n              msg: \"required parameter, check again your input\",\n            });\n          }\n        } else {\n          reply.send({\n            status: false,\n            msg: \"Don't have access to the feature\",\n          });\n        }\n      });\n  } else {\n    reply.send({\n      status: false,\n      data_act: \"sesi not found\",\n      session: user,\n    });\n  }\n}","figma":{}},"title":"role","type":"cms-template","lang":"","status":"SYSTEM","parent_id":"54643","slug":"/api/role","site":"*","id":"81622"}