{"content":{"type":"API","structure":"","server_on_load":"async ({\n  template,\n  params,\n  render,\n  db,\n  req,\n  reply,\n  user,\n  log,\n  ext,\n  isDev,\n}: Server) => {\n  const privateKey = \"Team 6 Andromedia\";\n  if (user.id) {\n    let token_private = ext.CryptoJS.SHA3(privateKey, {\n      outputLength: 512,\n    }).toString();\n    let a_data = ext.CryptoJS.AES.decrypt(user.id, token_private).toString(\n      ext.CryptoJS.enc.Utf8\n    );\n    let data = JSON.parse(a_data);\n    if (data) {\n      db.muser\n        .findUnique({\n          where: {\n            id: parseInt(data.id),\n          },\n          select: {\n            email: true,\n            muser_detail: true,\n            muser_role: {\n              select: {\n                name: true,\n              },\n            },\n          },\n        })\n        .then((e) => {\n          if (\n            e.muser_role.name == \"admin\" ||\n            e.muser_role.name == \"Project Manager\"\n          ) {\n            // reply.send({\n            //   req.body.team,\n            // });\n            try {\n              if (req.body.data.team > 0 || req.body.data.member.length > 0) {\n                let datainput = {\n                  nameProject: req.body.data.name,\n                  desc: req.body.data.desc,\n                  iduser: data.id,\n                  iddepartment: e.muser_detail.idepartment,\n                  label: req.body.data.label,\n                };\n                // Make Project\n                const project = db.mproject.create({\n                  data: {\n                    name: datainput.nameProject,\n                    iddepartment: datainput.iddepartment,\n                    label: datainput.label,\n                  },\n                });\n                project.then((e) => {\n                  // Make Role Author Project\n                  const authorProject = db.muser_has_mproject.create({\n                    data: {\n                      idproject: e.id,\n                      iduser: parseInt(datainput.iduser),\n                    },\n                  });\n                  authorProject.then((e1) => {\n                    // Update author Project\n                    const updateProject = db.mproject.update({\n                      where: {\n                        id: e.id,\n                      },\n                      data: {\n                        iduserproject: e1.id,\n                      },\n                    });\n                    updateProject.then((e2) => {});\n                  });\n                  var data_member = [];\n                  if (req.body.data.team && req.body.data.member != 0) {\n                    reply.send({\n                      msg: \"tes tim\",\n                      cek_data: datainput,\n                    });\n                    // get member of team\n                    const memberTeam = db.muser_team_role.findMany({\n                      where: {\n                        idteam: parseInt(req.body.team),\n                      },\n                    });\n                    memberTeam.then((idx4) => {\n                      idx4.map((idx1) => {\n                        data_member.push({ idproject: e.id, iduser: idx1.id });\n                      });\n                    });\n                  }\n                  if (req.body.data.member && req.body.data.member.length > 0) {\n                    let a_member = req.body.data.member;\n                    a_member.map((idx1) => {\n                      data_member.push({ idproject: e.id, iduser: idx1 });\n                    });\n                  }\n\n                  const addMember = db.muser_has_mproject.createMany({\n                    data: data_member,\n                    skipDuplicates: true, // Skip 'Bobo'\n                  });\n                  addMember.then((e4) => {\n                    reply.send({\n                      status: true,\n                      msg: \"Succes add new project\",\n                    });\n                  });\n                });\n              } else {\n                reply.send({\n                  status: false,\n                  msg: \"Minimum 1 member in the project\",\n                });\n              }\n            } catch (exception_var) {\n              reply.send({\n                status: false,\n                msg: \"required parameter, check again your input\",\n              });\n            }\n          } else {\n            reply.send({\n              status: false,\n              data_act: \"Don't have access to the feature\",\n            });\n          }\n        });\n    } else {\n      reply.send({\n        status: false,\n        data_act: \"sesi not found\",\n      });\n    }\n  } else {\n    reply.send({\n      status: false,\n      data_act: \"sesi not found\",\n    });\n  }\n}","figma":{}},"title":"project-create","type":"cms-template","lang":"","status":"SYSTEM","parent_id":"54643","slug":"/api/project/create","site":"*","id":"64595"}