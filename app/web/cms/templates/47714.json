{
  "title": "project-task-update",
  "type": "cms-template",
  "lang": "",
  "status": "SYSTEM",
  "parent_id": "54643",
  "content": {
    "type": "API",
    "structure": "",
    "server_on_load": "async ({\n  template,\n  params,\n  render,\n  db,\n  req,\n  reply,\n  user,\n  log,\n  ext,\n  isDev,\n}: Server) => {\n  const privateKey = \"Team 6 Andromedia\";\n  if (user.user.id) {\n    let token_private = ext.CryptoJS.SHA3(privateKey, {\n      outputLength: 512,\n    }).toString();\n    let a_data = ext.CryptoJS.AES.decrypt(user.user.id, token_private).toString(\n      ext.CryptoJS.enc.Utf8\n    );\n    let data = JSON.parse(a_data);\n    if (data) {\n      db.muser\n        .findUnique({\n          where: {\n            id: parseInt(data.id),\n          },\n          select: {\n            email: true,\n            muser_role: true,\n            muser_detail: true,\n          },\n        })\n        .then((e) => {\n          // reply.send({\n          //   status: false,\n          //   msg: \"Failed update status because id status is invalid\",\n          //   data: e,\n          // });\n          if (\n            e.muser_role.name.toLowerCase() == \"project manager\" ||\n            e.muser_role.name.toLowerCase() == \"user\"\n          ) {\n            // reply.send({\n            //   status: false,\n            //   msg: \"Failed update status because id status is invalid\",\n            //   data: req.body.data,\n            // });\n            db.mproject_detail\n              .findUnique({\n                where: {\n                  id: parseInt(req.body.data.idtask),\n                },\n              })\n              .then((e1) => {\n                if (\n                  e.muser_role.name.toLowerCase() == \"project manager\" ||\n                  e1.iddivision == e.muser_detail.iddivision\n                ) {\n                  db.mproject_detail\n                    .update({\n                      where: {\n                        id: parseInt(req.body.data.idtask),\n                      },\n                      data: {\n                        idproject: parseInt(req.body.data.idproject),\n                        name: req.body.data.name,\n                        idstatus: parseInt(req.body.data.idstatus),\n                        startdate: new Date(req.body.data.startdate),\n                        duedate: new Date(req.body.data.duedate),\n                        priority: parseInt(req.body.data.priority),\n                        // iddivision: parseInt(req.body.data.iddivison),\n                        effort: parseInt(req.body.data.effort),\n                      },\n                    })\n                    .then((e) => {\n                      reply.send({\n                        status: true,\n                        data_act: e,\n                      });\n                    })\n                    .catch((e) => {\n                      reply.send({\n                        status: false,\n                        msg:\n                          \"Failed update status because id status is invalid\",\n                      });\n                    });\n                } else {\n                  reply.send({\n                    status: false,\n                    msg: \"You dont have access with the task\",\n                  });\n                }\n              });\n          } else {\n            reply.send({\n              status: false,\n              msg: \"you dont have access the featured\",\n            });\n          }\n        })\n        .catch((e) => {\n          reply.send({\n            status: false,\n            msg: e,\n          });\n        });\n    } else {\n      reply.send({\n        status: false,\n        msg: \"invalid session id\",\n      });\n    }\n  } else {\n    reply.send({\n      status: false,\n      msg: \"session not found\",\n    });\n  }\n}",
    "figma": {}
  },
  "slug": "/api/project/task/update",
  "site": "*",
  "id": "47714"
}
