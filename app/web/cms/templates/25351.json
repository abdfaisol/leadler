{"content":{"type":"API","structure":"","server_on_load":"async ({\n  template,\n  params,\n  render,\n  db,\n  req,\n  reply,\n  user,\n  log,\n  ext,\n  isDev,\n}: Server) => {\n  const privateKey = \"Team 6 Andromedia\";\n  if (user.id) {\n    let token_private = ext.CryptoJS.SHA3(privateKey, {\n      outputLength: 512,\n    }).toString();\n    let a_data = ext.CryptoJS.AES.decrypt(user.id, token_private).toString(\n      ext.CryptoJS.enc.Utf8\n    );\n    let data = JSON.parse(a_data);\n    if (data) {\n      db.muser\n        .findUnique({\n          where: {\n            id: parseInt(data.id),\n          },\n          select: {\n            email: true,\n            muser_role: {\n              select: {\n                name: true,\n              },\n            },\n          },\n        })\n        .then((e) => {\n          if (e.muser_role.name.toLowerCase() == \"admin\") {\n            const query = db.$queryRaw(\n              \"select * from v_timeline_project_detail_parent where idproject =\" +\n                parseInt(req.body.data.idproject) +\n                \" and date_part('month'::text, startdate) = \" +\n                new String(req.body.data.month) +\n                \" and date_part('year'::text, startdate) = \" +\n                new String(req.body.data.year) +\n                \" order by id\"\n            );\n            query.then((e1) => {\n              reply.send({\n                status: true,\n                data_act: {\n                  timeline: e1,\n                },\n              });\n            });\n          }\n          if (e.muser_role.name.toLowerCase() == \"directors\") {\n            const query = db.$queryRaw(\n              \"select * from v_timeline_project_detail_parent where idproject =\" +\n                parseInt(req.body.data.idproject) +\n                \" and date_part('month'::text, startdate) = \" +\n                new String(req.body.data.month) +\n                \" and date_part('year'::text, startdate) = \" +\n                new String(req.body.data.year) +\n                \" order by id\"\n            );\n            query.then((e1) => {\n              reply.send({\n                status: true,\n                data_act: {\n                  timeline: e1,\n                },\n              });\n            });\n          }\n          if (\n            e.muser_role.name.toLowerCase() == \"user\" ||\n            e.muser_role.name.toLowerCase() == \"project manager\"\n          ) {\n            db.muser_has_mproject\n              .findFirst({\n                where: {\n                  AND: [\n                    { iduser: parseInt(data.id) },\n                    { idproject: parseInt(params.id) },\n                  ],\n                },\n              })\n              .then((e0) => {\n                if (e0.idproject == parseInt(req.body.data.idproject)) {\n                  const query = db.$queryRaw(\n                    \"select * from v_timeline_project_detail_parent where idproject =\" +\n                      parseInt(req.body.data.idproject) +\n                      \" and date_part('month'::text, startdate) = \" +\n                      new String(req.body.data.month) +\n                      \" and date_part('year'::text, startdate) = \" +\n                      new String(req.body.data.year) +\n                      \" order by id\"\n                  );\n                  query.then((e1) => {\n                    reply.send({\n                      status: true,\n                      data_act: {\n                        timeline: e1,\n                      },\n                    });\n                  });\n                } else {\n                  reply.send({\n                    status: false,\n                    msg: \"you dont have access with this project\",\n                  });\n                }\n                // reply.send({\n                //   status: false,\n                //   pesanindo: \"testing\",\n                //   msg: e0,\n                // });\n              });\n          }\n          // Validasi Role\n        })\n        .catch((e) => {\n          reply.send({\n            status: false,\n            msg: e,\n          });\n        });\n    } else {\n      reply.send({\n        status: false,\n        msg: \"invalid session id\",\n      });\n    }\n  } else {\n    reply.send({\n      status: false,\n      msg: \"session not found\",\n    });\n  }\n}","figma":{}},"title":"project-task-timeline","type":"cms-template","lang":"","status":"SYSTEM","parent_id":"54643","slug":"/api/project/task/timeline","site":"*","id":"25351"}