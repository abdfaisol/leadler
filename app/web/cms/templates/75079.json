{
  "content": {
    "type": "API",
    "structure": "",
    "server_on_load": "async ({\n  template,\n  params,\n  render,\n  db,\n  req,\n  reply,\n  user,\n  log,\n  ext,\n  isDev,\n}: Server) => {\n  const privateKey = \"Team 6 Andromedia\";\n  if (user.user.id) {\n    let token_private = ext.CryptoJS.SHA3(privateKey, {\n      outputLength: 512,\n    }).toString();\n    let a_data = ext.CryptoJS.AES.decrypt(user.user.id, token_private).toString(\n      ext.CryptoJS.enc.Utf8\n    );\n    let data = JSON.parse(a_data);\n    if (data) {\n      db.muser\n        .findUnique({\n          where: {\n            id: parseInt(data.id),\n          },\n          select: {\n            email: true,\n            muser_detail: true,\n            muser_role: {\n              select: {\n                name: true,\n              },\n            },\n          },\n        })\n        .then((e) => {\n          if (\n            e.muser_role.name == \"admin\" ||\n            e.muser_role.name == \"Project Manager\"\n          ) {\n            try {\n              if (req.body.data.member.length > 0) {\n                let datainput = {\n                  name: req.body.data.name,\n                  idauthor: e.muser_detail.id,\n                };\n\n                db.muser_team\n                  .create({\n                    data: {\n                      name: req.body.data.name,\n                      iduser: e.muser_detail.id,\n                    },\n                  })\n                  .then((e) => {\n                    var member = [];\n                    req.body.data.member.map((idx) => {\n                      member.push({\n                        idteam: e.id,\n                        iduser: idx,\n                      });\n                    });\n                    const addMember = db.muser_team_role.createMany({\n                      data: member,\n                      skipDuplicates: true, // Skip 'Bobo'\n                    });\n                    addMember\n                      .then((e4) => {\n                        reply.send({\n                          status: true,\n                          msg: \"Succes add new team\",\n                        });\n                      })\n                      .catch((e4) => {\n                        reply.send({\n                          status: false,\n                          msg: \"Failed add member\",\n                        });\n                      });\n                  });\n              } else {\n                reply.send({\n                  status: false,\n                  msg: \"Minimum 1 member in the project\",\n                });\n              }\n            } catch (exception_var) {\n              reply.send({\n                status: false,\n                msg: \"required parameter, check again your input\",\n              });\n            }\n          } else {\n            reply.send({\n              status: false,\n              data_act: \"Don't have access to the feature\",\n            });\n          }\n        });\n    } else {\n      reply.send({\n        status: false,\n        data_act: \"sesi not found\",\n      });\n    }\n  } else {\n    reply.send({\n      status: false,\n      data_act: \"sesi not found\",\n    });\n  }\n}",
    "figma": {}
  },
  "title": "team-create",
  "type": "cms-template",
  "lang": "",
  "status": "SYSTEM",
  "parent_id": "54643",
  "slug": "/api/team/create",
  "site": "*",
  "id": "75079"
}
